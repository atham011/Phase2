program -> functions

functions -> function functions | epsilon

function -> FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

vars -> var | var COMMA vars

var -> identifier | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET

declarations -> declaration SEMICOLON declarations | epsilon

declaration -> identifiers COLON INTEGER | identifiers COLON ENUM L_PAREN identifiers R_PAREN | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

identifiers -> identifier | identifier COMMA identifiers

identifier -> IDENT

expressions -> expression | expression COMMA expressions

expression -> MultiplicativeExpr | MultiplicativeExpr ADD MultiplicativeExpr | MultiplicativeExpr SUB MultiplicativeExpr

statements -> var ASSIGN expression | IF BoolExpr THEN statements ENDIF | IF BoolExpr THEN statements ELSE statements ENDIF | WHILE BoolExpr BEGINLOOP statements ENDLOOP | DO BEGINLOOP statements ENDLOOP WHILE BoolExpr | READ vars | CONTINUE | WRITE vars | RETURN expression

BoolExpr -> RelationAndExpr | RelationAndExpr OR BoolExpr

RelationAndExpr -> RelationExpr | RelationExpr AND RelationAndExpr

RelationExpr -> expression compare expression | TRUE | FALSE | L_PAREN BoolExpr R_PAREN | NOT expression compare expression | NOT TRUE | NOT FALSE | NOT L_PAREN BoolExpr R_PAREN

compare -> EQ | NEQ | LT | GT | LTE | GTE

MultiplicativeExpr -> term | term MOD MultiplicativeExpr | term DIV MultiplicativeExpr | term MULT MultiplicativeExpr

term -> identifier L_PAREN expressions R_PAREN | var | NUMBER | L_PAREN | SUB var | L_PAREN expression R_PAREN | SUB NUMBER | SUB L_PAREN expression R_PAREN



